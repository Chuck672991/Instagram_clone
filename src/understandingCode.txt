app js ki file se

import "./App.css";
import Navbar from "./components/Navbar";
import Post from "./components/Post";
import { useEffect, useState } from "react";
import { db, auth } from "./firebase";
import { Modal } from "@mui/material";
import { makeStyles } from "@mui/styles";

import Button from "@mui/material/Button";
import Input from "@mui/material/Input";
import ImageUpload from "./components/ImageUpload";

function getModalStyle() {
  const top = 50;
  const left = 50;
  return {
    top: `${top}%`,
    left: `${left}%`,
    transform: `translate(-${top}%,-${left}%)`,
  };
}

const useStyles = makeStyles(() => ({
  paper: {
    position: "absolute",
    width: 400,
    border: "2px solid #000",
    boxShadow: "0 16px 10px rgba(0, 0, 0, 0.12) !important", // Use boxShadow directly with !important
    padding: "16px", // You can use the number directly
    backgroundColor: "#fff",
  },
}));

function App() {
  const classes = useStyles();
  const [posts, setPosts] = useState([]);
  const [open, setOpen] = useState(false);
  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [user, setUser] = useState(null);
  const [openSignIn, setOpenSignIn] = useState(false);

  // To Keep track on user if its logged in or not
  useEffect(() => {
    const unsubscribe = auth.onAuthStateChanged((authUser) => {
      if (authUser) {
        //ye cheez refresh k baad bhi user ko logged in rkhey gi ye nh hoga tw jesi refresh krega wesi he logg out hojayega
        // Agr user Logged in ha ye chalega
        setUser(authUser);
      } else {
        // age user logged out hogya to ye
        setUser(null);
      }
    });
    return () => {
      unsubscribe();
      //agr suppose user ek username se login hota h phr uska dil krta ha k userName change krdey tw uswaqt change honey k bad wo duplication se bachnge k liey iscode ki istemaal ki jayegi
    };
  }, [user, username]);

  const handleSignup = (e) => {
    // You can implement your signup logic here
    // Typically, you'd call an API to create a user account with the provided details
    // onSignup(username, email, password);
    e.preventDefault();
    auth
      .createUserWithEmailAndPassword(email, password)
      .then((authUser) => {
        return authUser.user.updateProfile({
          displayName: username,
        });
      })
      .catch((error) => alert(error.message));
  };
  useEffect(() => {
    // Fetch data from Firestore and populate the 'posts' state
    db.collection("posts").onSnapshot((snapshot) => {
      setPosts(
        snapshot.docs.map((doc) => ({
          id: doc.id,
          post: doc.data(),
        }))
      );
    });
  }, []);
  const signIn = (e) => {
    e.preventDefault();
    auth
      .signInWithEmailAndPassword(email, password)
      .catch((error) => alert(error.message));
    setOpenSignIn(false);
  };
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------

//code from image ImageUpload
const handleUpload=()=>{
    const uploadTask = storage.ref(`images/${img.name}`.put(img)) //uploading the selected image to firebase
    uploadTask.on(
        "state_changed",
        (snapshot)=>{
            const progress = Math.round(
               ( snapshot.bytesTransferred/snapshot.totalBytes) *100
            );
            setProgress(progress)
        },
        (error)=>{
            console.log(error)
            alert(error.message)
        },
        ()=>{ // now goo on firebase to fetch the uploaded image for display to user
            storage
            .ref("images")
            .child(img.name)
            .getDownloadURL()
            .then(url =>{
                //post the image inside of the db
                db.collection("posts".add)({
                    timestamp:firebase.firestore.FieldValue.serverTimestamp(),//so that recents posts come one top
                    caption:caption,
                    imageURL:url,
                    username:username


                });
                setProgress(0);
                setCaption("")
                setImg(null)
            });
        }
    )
}
